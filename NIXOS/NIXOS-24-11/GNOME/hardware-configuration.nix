
# Do not modify this file! It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations. Please make changes
# to /etc/nixos/configuration.nix instead.

{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:
with lib;
let
  name = "tolga";
  extraBackends = [ pkgs.epkowa ];
in

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "uas"
    "usbhid"
    "sd_mod"

  ];

  boot.blacklistedKernelModules = lib.mkDefault [ "nouveau" ];
  boot.initrd.kernelModules = [
    "nvidia"
    "cifs"    # implementation of the Server Message Block (SMB) protocol, is used to share file systems, printers, or serial ports over a network.
  ];
  boot.kernelModules = [
    "kvm-intel"
    "nvidia"
    "nvidia_modeset"
    "nvidia_uvm"
    "nvidia_drm"
  ];

  boot.extraModulePackages = with config.boot.kernelPackages; [ ];

  boot.kernelParams = [
    "mitigations=off"
    "nvidia_drm.fbdev=1"
    "nvidia_drm.modeset=1"
    "quiet"
  ];

  boot.kernel.sysctl = {
    # Kernel Settings
    "kernel.pty.max" = 24000;                     # Maximum number of pseudo-terminal (pty) devices.
    "kernel.sched_autogroup_enabled" = 0;         # Disable automatic grouping of tasks in the scheduler.
    "kernel.sched_migration_cost_ns" = 5000000;   # Cost (in nanoseconds) of migrating a task to another CPU.
    "kernel.sysrq" = 1;                           # Enable the SysRq key for low-level system commands.
    "kernel.pid_max" = 131072;                    # Maximum number of processes and threads.

    # Network Settings
    # "net.core.default_qdisc" = "fq";          # Use Fair Queueing (FQ) as default queuing discipline for reduced latency.
    "net.core.default_qdisc" = "cake";
    "net.core.netdev_max_backlog" = 30000;      # Helps prevent packet loss during high traffic periods.
    "net.core.rmem_default" = 4194304;          # Default socket receive buffer size increased for better network performance.
    "net.core.rmem_max" = 16777216;             # Maximum socket receive buffer size increased for better network performance.
    "net.core.wmem_default" = 4194304;          # Default socket send buffer size increased for better network performance.
    "net.core.wmem_max" = 16777216;             # Maximum socket send buffer size increased for better network performance.
    "net.ipv4.ipfrag_high_threshold" = 5242880; # Threshold to reduce fragmentation.
    "net.ipv4.tcp_congestion_control" = "bbr";  # Use TCP BBR congestion control algorithm for optimized throughput.
    "net.ipv4.tcp_keepalive_intvl" = 15;        # TCP keepalive interval in seconds for faster detection of connection issues.
    "net.ipv4.tcp_keepalive_probes" = 3;        # TCP keepalive probes for faster detection of connection issues.
    "net.ipv4.tcp_keepalive_time" = 120;        # TCP keepalive interval in seconds for faster detection of connection issues.
    "net.ipv4.tcp_mtu_probing" = 1;
    "net.ipv4.tcp_tw_reuse" = 1;
    "net.ipv4.udp_rmem_min" = 16384;
    "net.ipv4.udp_wmem_min" = 16384;

    # Virtual Memory Settings
    "vm.dirty_background_bytes" = 67108864;   # Reduce dirty background bytes to 64 MB for faster writeback initiation.
    "vm.dirty_bytes" = 268435456;             # Increase dirty bytes to 256 MB for more efficient dirty memory handling.
    "vm.dirty_background_ratio" = 5;          # Set very low dirty background ratio to trigger faster writeback (5%).
    "vm.dirty_expire_centisecs" = 1000;       # Decrease dirty expire centiseconds to 10 seconds for faster writeout.
    "vm.dirty_ratio" = 30;                    # Lower dirty ratio to 30% for faster process writeout.
    "vm.dirty_time" = 1;                      # Enable dirty time accounting to track dirty page age.
    "vm.dirty_writeback_centisecs" = 100;     # Reduce dirty writeback centiseconds to 1 second for faster background writeback.
    "vm.max_map_count" = 1000000;             # Maximum number of memory map areas per process.
    "vm.min_free_kbytes" = 131072;            # Minimum free memory for safety (in KB).
    "vm.swappiness" = 10;                     # Kernel tendency to swap inactive memory pages.
    "vm.vfs_cache_pressure" = 90;             # Management of memory used for caching filesystem objects.

    # File System Settings
    "fs.aio-max-nr" = 524288;                 # Increase maximum number of asynchronous I/O requests for faster file I/O.
    "fs.inotify.max_user_watches" = 1048576;  # Increase maximum number of file system watches for better file system monitoring.

    # Nobara Tweaks
    "kernel.panic" = 5; # Reboot after 5 seconds on kernel panic.
  };

  # boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/bfd5019f-8383-48f3-85d9-e6af194973e7";
    fsType = "ext4";

    # Optimize SSD
    # ---------------------------------------------
    options = [
      "data=ordered"  # Ensures data ordering, improving file system reliability and performance by writing data to disk in a specific order.
      "defaults"      # Applies the default options for mounting, which usually include common settings for permissions, ownership, and read/write access.
      "discard"       # Enables the TRIM command, which allows the file system to notify the storage device of unused blocks, improving performance and longevity of solid-state drives (SSDs).
      "noatime"       # Disables updating access times for files, improving file system performance by reducing write operations.
      "nodiratime"    # Disables updating directory access time, improving file system performance by reducing unnecessary writes.
      "relatime"      # Updates the access time of files relative to the modification time, minimizing the performance impact compared to atime
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/952E-CC02";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/tmp" = {
    device = "tmpfs";
    fsType = "tmpfs";
    options = [
      "defaults"
      "nosuid"
      "nodev"
    ]; # "noexec" ]; # noexec causes nvidia-vaapi-driver build to fail :shrug:
  };

  powerManagement = {
    cpuFreqGovernor = lib.mkDefault "performance";

    #---------------------------------------------------------------------------
    # Disable hid driver (gyro/accel) while sleeping for extra power-saving
    #---------------------------------------------------------------------------

    # removes the intel_hid kernel module, which typically handles input from Intel HID devices, such as gyroscope and accelerometer sensors.
    #powerDownCommands = ''
    #  ${pkgs.kmod}/bin/modprobe -r intel_hid
    #'';
    # reloads the intel_hid kernel module, re-enabling the Intel HID devices.
    #resumeCommands = ''
    #  ${pkgs.kmod}/bin/modprobe intel_hid
    #'';
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface.
  # In case of scripted networking (the default) this is the recommended approach.
  # When using systemd-networkd it's still possible to use this option,
  # but it's recommended to use it in conjunction with explicit per-interface
  # declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  # nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  #hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Allow unfree packages
  nixpkgs = {
    config.allowUnfree = true;
    hostPlatform = lib.mkDefault "x86_64-linux";
  };

  #---------------------------------------------------------------------
  # Hardware Configuration
  #---------------------------------------------------------------------
  hardware = {
    # bluetooth.enable = false;
    bluetooth.powerOnBoot = false; # Disable Bluetooth power on boot for power management and to analyze power consumption on Intel-based laptops.
    cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware; # Update Intel CPU microcode if redistributable firmware is enabled.
    enableAllFirmware = true; # Enable all firmware.
    pulseaudio.enable = false; # Disable PulseAudio.
    usb-modeswitch.enable = true; # Enable USB Modeswitch to manage mobile broadband devices.
    logitech.wireless.enable = true;
    logitech.wireless.enableGraphical = true;

    sane = {
      enable = true; # Scanner and printing drivers
      extraBackends = extraBackends; # Scanner and printing drivers
    };

  };
}

